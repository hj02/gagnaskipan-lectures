==8971== Memcheck, a memory error detector
==8971== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==8971== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==8971== Command: ./a.out
==8971== 
==8971== Invalid read of size 4
==8971==    at 0x40083F: IntStack::pop() (invalid_read_sigsegv.cpp:77)
==8971==    by 0x4008A5: main (invalid_read_sigsegv.cpp:91)
==8971==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8971== 
==8971== 
==8971== Process terminating with default action of signal 11 (SIGSEGV)
==8971==  Access not within mapped region at address 0x0
==8971==    at 0x40083F: IntStack::pop() (invalid_read_sigsegv.cpp:77)
==8971==    by 0x4008A5: main (invalid_read_sigsegv.cpp:91)
==8971==  If you believe this happened as a result of a stack
==8971==  overflow in your program's main thread (unlikely but
==8971==  possible), you can try to increase the size of the
==8971==  main thread stack using the --main-stacksize= flag.
==8971==  The main thread stack size used in this run was 8388608.
==8971== 
==8971== HEAP SUMMARY:
==8971==     in use at exit: 0 bytes in 0 blocks
==8971==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==8971== 
==8971== All heap blocks were freed -- no leaks are possible
==8971== 
==8971== For counts of detected and suppressed errors, rerun with: -v
==8971== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
